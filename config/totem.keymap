//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//

#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_v {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp V>;
        };

        combo_del {
            bindings = <&kp DELETE>;
            key-positions = <5 6>;
        };

        combo_ins {
            bindings = <&kp INS>;
            key-positions = <6 7>;
        };

        combo_bksp {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
        };

        combo_pscn {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <29 19>;
        };

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <15 5>;
        };

        combo_unlock {
            bindings = <&studio_unlock>;
            key-positions = <0 9>;
        };

        layer_toggle {
            bindings = <&tog 4>;
            key-positions = <33 34 35 36>;
        };

        combo_q {
            bindings = <&kp Q>;
            key-positions = <2 3>;
            timeout-ms = <50>;
        };

        combo_z {
            bindings = <&kp Z>;
            key-positions = <22 23>;
            timeout-ms = <50>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
            timeout-ms = <50>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
       &kp W           &kp C       &kp L        &kp D        &kp V        &kp Z        &kp U            &kp O        &kp Y       &kp APOSTROPHE
       &mt LEFT_GUI R  &mt LALT S  &mt LCTRL N  &mt LSHFT T  &kp P        &kp K        &mt RSHFT A      &mt RCTRL E  &mt RALT I  &mt LEFT_GUI H
&kp W  &kp Q           &kp F       &kp M        &kp G        &kp B        &kp J        &kp X            &kp COMMA    &kp PERIOD  &kp SLASH       &kp APOSTROPHE
                                   &trans       &mo 1        &kp SPACE    &lt 2 ENTER  &lt 3 BACKSPACE  &trans
            >;
        };

        sym_layer {
            bindings = <
                  &kp LESS_THAN  &kp RIGHT_BRACE  &kp RBKT      &kp RIGHT_PARENTHESIS  &kp BSLH     &kp UNDERSCORE  &kp CARET     &kp SQT        &kp DOUBLE_QUOTES  &kp GREATER_THAN
                  &kp HASH       &kp LEFT_BRACE   &kp LBKT      &kp LEFT_PARENTHESIS   &kp SLASH    &kp MINUS       &kp ASTERISK  &kp PERCENT    &kp SEMI           &kp PIPE
&kp GREATER_THAN  &kp POUND      &kp DOLLAR       &kp QUESTION  &kp EXCLAMATION        &kp PIPE     &kp TILDE       &kp AT_SIGN   &kp AMPERSAND  &kp COLON          &trans            &trans
                                                  &trans        &trans                 &trans       &trans          &trans        &trans
            >;

            label = "SYM";
        };

        num_layer {
            bindings = <
        &kp PLUS  &kp N7  &kp N8  &kp N9  &kp EQUAL    &kp F1  &kp F2   &kp F3   &kp F4   &kp F5
        &kp N0    &kp N4  &kp N5  &kp N6  &kp TILDE    &kp F9  &kp F6   &kp F7   &kp F8   &kp PIPE
&trans  &trans    &kp N1  &kp N2  &kp N3  &trans       &trans  &kp F10  &kp F11  &kp F12  &trans    &trans
                          &trans  &trans  &trans       &trans  &trans   &trans
            >;

            label = "NUM";
        };

        func_layer {
            bindings = <
        &trans  &kp HOME        &kp UP_ARROW  &kp END    &trans    &trans  &trans  &trans  &trans  &bt BT_CLR_ALL
        &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans    &trans  &trans  &trans  &trans  &soft_off
&trans  &trans  &trans          &trans        &trans     &trans    &trans  &trans  &trans  &trans  &trans          &trans
                                &trans        &trans     &trans    &trans  &trans  &trans
            >;

            label = "FUNC";
        };

        qwerty {
            label = "q";
            bindings = <
       &trans          &kp W       &kp E        &kp R        &kp T        &kp Y        &kp U            &kp I        &kp O       &trans
       &mt LEFT_GUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F  &kp G        &kp H        &mt RSHFT J      &mt RCTRL K  &mt RALT L  &mt LEFT_GUI SEMICOLON
&kp Q  &kp Z           &kp X       &kp C        &kp V        &kp B        &kp N        &kp M            &kp COMMA    &kp PERIOD  &kp SLASH               &kp P
                                   &trans       &mo 1        &kp SPACE    &lt 2 ENTER  &lt 3 BACKSPACE  &trans
            >;
        };
    };
};
